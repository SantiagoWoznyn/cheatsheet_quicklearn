Trabajar con dos PC en GitHub es bastante sencillo si sigues los siguientes pasos para configurar y usar Git correctamente. Aquí te explico el flujo básico para trabajar con GitHub en dos máquinas.

1. Crear un repositorio en GitHub
Primero, necesitas tener un repositorio en GitHub. Si aún no tienes uno, puedes crear uno desde la web de GitHub:

Inicia sesión en tu cuenta de GitHub.
Haz clic en "New Repository" (Nuevo repositorio).
Ponle un nombre y haz clic en "Create repository".

2. Clonar el repositorio en ambas PC
Ahora, para trabajar en ambas PC, necesitas clonar el repositorio en cada máquina. Para hacerlo, debes seguir estos pasos:

En la primera PC:
Abre una terminal y navega a la carpeta donde deseas clonar el repositorio.
Usa el comando git clone para clonar el repositorio. Por ejemplo:
git clone https://github.com/usuario/mi-repositorio.git

(Sustituye usuario/mi-repositorio con la URL de tu repositorio en GitHub).
En la segunda PC:
En la otra PC, sigue el mismo proceso y clona el mismo repositorio con el mismo comando git clone.
Ahora tienes el mismo código en ambas máquinas.

3. Realizar cambios en una PC
Abre la carpeta del repositorio en tu PC (en cualquiera de las dos).

Realiza los cambios en los archivos como desees (editar código, agregar archivos, etc.).

Una vez hayas hecho cambios, usa los siguientes comandos para guardar y enviar los cambios a GitHub:

Agregar los archivos modificados al staging area:

git add .
Confirmar los cambios con un mensaje:

git commit -m "Descripción de los cambios"
Subir los cambios a GitHub:

git push origin main
(Usa main o el nombre de tu rama si estás trabajando en una rama diferente).

4. Sincronizar en la otra PC
En la segunda PC, para obtener los últimos cambios realizados en GitHub, debes hacer un git pull:

En la terminal, navega a la carpeta del repositorio.
Usa el siguiente comando para descargar los cambios más recientes desde GitHub:
git pull origin main
Esto actualizará la copia local con los cambios realizados en la primera PC.

5. Trabajar en ambas PCs sin conflicto
Para evitar conflictos de código, debes asegurarte de hacer los git push y git pull con regularidad. Esto mantendrá ambas máquinas sincronizadas y reducirá las posibilidades de conflictos al trabajar con el mismo código en dos lugares.

Si dos personas (o dos PC) modifican el mismo archivo en la misma línea, Git te alertará sobre un conflicto y te pedirá que lo resuelvas manualmente. En ese caso, puedes editar el archivo para resolver el conflicto y luego hacer un nuevo git commit y git push.
IMPORTANTE :
Flujo de trabajo común:
Primera PC: Haz cambios, git add ., git commit, git push.
Segunda PC: git pull para obtener los cambios.
Segunda PC: Haz tus propios cambios, git add ., git commit, git push.
Primera PC: git pull para obtener los cambios de la segunda PC.
Este flujo es repetible para mantener ambas máquinas sincronizadas mientras trabajas en el mismo proyecto.
